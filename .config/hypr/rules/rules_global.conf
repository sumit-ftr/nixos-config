general {
  border_size = 2 # size of the border around windows
  gaps_in = 2 # gaps between windows (top, right, bottom, left -> 5,10,15,20)
  gaps_out = 4 # gaps between windows and monitor edges (top, right, bottom, left -> 5,10,15,20)
  layout = dwindle # [dwindle/master]
  no_focus_fallback = true # if true, will not fall back to the next available window when moving focus in a direction where no window was found
  resize_corner = 0 # force floating windows to use a specific corner when being resized (1-4 going clockwise from top left, 0 to disable)

  no_border_on_floating = false # disable borders for floating windows
  hover_icon_on_border = true # show a cursor icon when hovering over borders, only used when general:resize_on_border is on.
}

decoration {
  rounding = 10 # rounded corner's radius (in layout px)
  active_opacity = 1.0 # opacity of active windows. [0.0 - 1.0]
  inactive_opacity = 1.0 # opacity of inactive windows. [0.0 - 1.0]

  rounding_power = 2.0 # adjusts the curve used for rounding corners, larger is smoother, 2.0 is a circle, 4.0 is a squircle. [2.0 - 10.0]
  fullscreen_opacity = 1.0 # opacity of fullscreen windows. [0.0 - 1.0]

  dim_inactive = false # enables dimming of inactive windows
  dim_strength = 0.5 # how much inactive windows should be dimmed [0.0 - 1.0]
  dim_special = 0.2 # how much to dim the rest of the screen by when a special workspace is open. [0.0 - 1.0]
  dim_around = 0.4 # how much the dimaround window rule should dim by. [0.0 - 1.0]

  shadow {
    enabled = true # enable drop shadows on windows
    range = 3 # Shadow range (“size”) in layout px
    render_power = 1 # in what power to render the falloff (more power, the faster the falloff) [1 - 4]
  }

  blur {
    enabled = false # enable kawase window background blur
  }
}

dwindle {
  pseudotile = true # enable pseudotiling. Pseudotiled windows retain their floating size when tiled.
  force_split = 0 # 0 -> split follows mouse, 1 -> always split to the left (new = left or top) 2 -> always split to the right (new = right or bottom)
  use_active_for_splits = true # whether to prefer the active window or the mouse position for splits
  split_width_multiplier = 1.0 # specifies the auto-split width multiplier
  special_scale_factor = 0.9 # specifies the scale factor of windows on the special workspace [0 - 1]
  preserve_split = true # if enabled, the split (side/top) will not change regardless of what happens to the container.
  smart_split = false # if enabled, allows a more precise control over the window split direction based on the cursor’s position. The window is conceptually divided into four triangles, and cursor’s triangle determines the split direction. This feature also turns on preserve_split
  smart_resizing = true # if enabled, resizing direction will be determined by the mouse’s position on the window (nearest to which corner). Else, it is based on the window’s tiling position
  default_split_ratio = 1.0 # the default split ratio on window open. 1 means even 50/50 split. [0.1 - 1.9]
  split_bias = 0 # specifies which window will receive the larger half of a split. positional - 0, current window - 1, opening window - 2 [0/1/2]
}

master {
  new_status = master # master: new window becomes master; slave: new windows are added to slave stack; inherit: inherit from focused window
  mfact = 0.55 # the size as a percentage of the master window, for example mfact = 0.70 would mean 70% of the screen will be the master window, and 30% the slave [0.0 - 1.0]
  new_on_top = true # whether a newly open window should be on the top of the stack
  orientation = left # default placement of the master area, can be left, right, top, bottom or center
  slave_count_for_center_master = 4 # when using orientation=center, make the master window centered only when at least this many slave windows are open. (Set 0 to always_center_master)
  # center_master_fallback = left # set if the slaves should appear on right of master when slave_count_for_center_master > 2
  drop_at_cursor = true # when enabled, dragging and dropping windows will put them at the cursor position. Otherwise, when dropped at the stack side, they will go to the top/bottom of the stack depending on new_on_top.
  always_keep_position = false # whether to keep the master window in its configured position when there are no slave windows
  special_scale_factor = 0.9 # the scale of the special workspace windows. [0.0 - 1.0]
  smart_resizing = true # if enabled, resizing direction will be determined by the mouse’s position on the window (nearest to which corner). Else, it is based on the window’s tiling position.
}

group {
  auto_group = true # whether new windows will be automatically grouped into the focused unlocked group. Note: if you want to disable auto_group only for specific windows, use the “group barred” window rule instead
  insert_after_current = false # whether new windows in a group spawn after current or at group tail
  focus_removed_window = true # whether Hyprland should focus on the window that has just been moved out of the group
  drag_into_group = 1 # whether dragging a window into a unlocked group will merge them. Options: 0 (disabled), 1 (enabled), 2 (only when dragging into the groupbar)
  merge_groups_on_drag = true # whether window groups can be dragged into other groups
  merge_floated_into_tiled_on_groupbar = false # whether dragging a floating window into a tiled window groupbar will merge them

  merge_groups_on_groupbar = false # whether one group will be merged with another when dragged into its groupbar
  group_on_movetoworkspace = false # whether using movetoworkspace[silent] will merge the window into the workspace’s solitary unlocked group

  groupbar {
    enabled = true # enables groupbars
    scrolling = false # whether scrolling in the groupbar changes group active window
    # font_family = [[Empty]] # font used to display groupbar titles, use misc:font_family if not specified
    font_size = 8 # font size of groupbar title
    height = 14 # height of the groupbar
    gaps_in = 2 # gap size between gradients
    gaps_out = 2 # gap size between gradients and window
    gradients = true # enables gradients
    gradient_rounding = 4 # how much to round the gradients
    gradient_round_only_edges = false # round only the gradient edges of the entire groupbar

    indicator_height = 0 # height of the groupbar indicator
    rounding = 1 # how much to round the indicator
    round_only_edges = true # round only the indicator edges of the entire groupbar
    priority = 3 # sets the decoration priority for groupbars
  }
}
